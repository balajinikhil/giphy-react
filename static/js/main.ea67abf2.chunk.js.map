{"version":3,"sources":["giphyAPI.js","ImageData.js","SearchBar.js","App.js","index.js"],"names":["axios","create","baseURL","params","api_key","ImageData","data","className","style","marginTop","gifs","map","e","i","src","images","original","url","alt","username","SearchBar","props","onSearchSubmit","useState","search","searchUpdate","onSubmit","preventDefault","type","placeholder","onChange","target","value","App","state","offset","totalLength","more","term","fetchMoreData","a","length","console","log","setState","dataApi","get","q","limit","response","concat","pagination","total_count","componentDidMount","this","dataLength","next","hasMore","loader","endMessage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wNACeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,gCACRC,OAAO,CACHC,QAAQ,sC,QCiBDC,EARG,SAACC,GACf,OACI,qBAAKC,UAAU,UAAUC,MAAO,CAACC,UAAU,QAA3C,UAZUC,EAaUJ,EAAKI,KAZtBA,EAAKC,KAAI,SAACC,EAAEC,GACX,OACI,cAAC,gBAAD,CACAN,UAAU,mBACVO,IAAKF,EAAEG,OAAOC,SAASC,IAAKC,IAAKN,EAAEO,UAFfN,SAHnB,IAACH,G,QCqBHU,EAtBG,SAACC,GAAU,IACnBC,EAAoBD,EAApBC,eADkB,EAEKC,mBAAS,kBAFd,mBAEnBC,EAFmB,KAEXC,EAFW,KAIxB,OACI,sBAAMC,SAAU,SAACd,GACbA,EAAEe,iBACFL,EAAeE,IAEnBjB,UAAU,UAJV,SAKI,sBAAKA,UAAU,QAAf,UACI,2CACA,uBAAOqB,KAAK,OAAQC,YAAY,iBAChCC,SAAU,SAAClB,GACPa,EAAab,EAAEmB,OAAOC,gBC4D3BC,E,4MAhEXC,MAAQ,CAACxB,KAAM,GAAIyB,OAAO,EAAGC,YAAY,EAAGC,MAAK,EAAMC,KAAK,kB,EAE5DC,c,uCAAgB,WAAMP,GAAN,eAAAQ,EAAA,6DAET,EAAKN,MAAMxB,KAAK+B,QAAU,EAAKP,MAAME,cAChCM,QAAQC,KAAI,GACf,EAAKC,SAAS,CAACP,MAAK,KAJb,SAOSQ,EAAQC,IAAI,UAAU,CACvC3C,OAAO,CACH4C,EAAE,EAAKb,MAAMI,KACbU,MAAM,GACNb,OAAO,EAAKD,MAAMC,UAXd,OAORc,EAPQ,OAcZP,QAAQC,IAAIM,EAAS3C,MACrB,EAAKsC,SAAS,CACVlC,KAAK,EAAKwB,MAAMxB,KAAKwC,OAAOD,EAAS3C,KAAKA,MAC1C6B,OAAO,EAAKD,MAAMC,OAAS,GAC3BC,YAAYa,EAAS3C,KAAK6C,WAAWC,cAlB7B,2C,wDAuBhBC,kB,sBAAmB,sBAAAb,EAAA,sDAChB,EAAKD,gBADW,2C,EAMnBjB,e,uCAAiB,WAAMgB,GAAN,SAAAE,EAAA,sEACP,EAAKI,SAAS,CAChBlC,KAAK,GACLyB,OAAO,EACPC,YAAY,EACZE,KAAKA,IALI,OAOb,EAAKC,gBAPQ,2C,6GAYb,OADAG,QAAQC,IAAIW,KAAKpB,OAEb,qBAAK3B,UAAU,eAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,CAAWe,eAAgBgC,KAAKhC,iBAChC,cAAC,IAAD,CACIiC,WAAYD,KAAKpB,MAAMxB,KAAK+B,OAC5Be,KAAMF,KAAKf,cACXkB,QAASH,KAAKpB,MAAMG,KACpBqB,OAAQ,4CACRC,WAAY,sDALhB,SAQI,cAAC,EAAD,CAAWjD,KAAQ4C,KAAKpB,MAAMxB,kB,GAzDpCkD,IAAMC,WCJxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea67abf2.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL:'https://api.giphy.com/v1/gifs',\r\n    params:{\r\n        api_key:'PZvJvffopnmNjquo6xZs6gG4C1TCTZfW'\r\n    }\r\n})","import React from 'react';\r\nimport {LazyLoadImage} from 'react-lazy-load-image-component'\r\n\r\nlet renderGifs = (gifs)=>{\r\n    return gifs.map((e,i)=>{\r\n            return(\r\n                <LazyLoadImage key={i} \r\n                className=\"five wide column\"\r\n                src={e.images.original.url} alt={e.username} />\r\n            )\r\n    })\r\n}\r\n\r\nconst ImageData = (data)=>{\r\n    return(\r\n        <div className=\"ui grid\" style={{marginTop:'25px'}}>\r\n                {renderGifs(data.gifs)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageData;","import React, { useState } from 'react';\r\n\r\nconst SearchBar = (props) =>{\r\n    let { onSearchSubmit  } = props\r\n    let [search, searchUpdate] = useState('silicon valley');\r\n\r\n    return(\r\n        <form onSubmit={(e)=>{\r\n            e.preventDefault();\r\n            onSearchSubmit(search)\r\n        }}\r\n        className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label>Search</label>\r\n                <input type=\"text\"  placeholder=\"Silicon Valley\" \r\n                onChange={(e)=>{\r\n                    searchUpdate(e.target.value)\r\n                }}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport dataApi from './giphyAPI'\r\nimport ImageData from './ImageData';\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {gifs: [], offset:0, totalLength:1, more:true, term:'silicon valley' };\r\n\r\n    fetchMoreData = async(value)=>{\r\n\r\n        if(this.state.gifs.length >= this.state.totalLength ){\r\n                console.log(true);\r\n             this.setState({more:false})\r\n        }\r\n\r\n        let response = await dataApi.get('/search',{\r\n            params:{\r\n                q:this.state.term,\r\n                limit:25,\r\n                offset:this.state.offset\r\n            }\r\n        });\r\n        console.log(response.data);\r\n        this.setState({\r\n            gifs:this.state.gifs.concat(response.data.data), \r\n            offset:this.state.offset + 25,\r\n            totalLength:response.data.pagination.total_count\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount= async ()=>{\r\n       this.fetchMoreData();\r\n    }\r\n\r\n\r\n\r\n    onSearchSubmit = async(term) =>{\r\n        await this.setState({\r\n            gifs:[],\r\n            offset:0,\r\n            totalLength:1,\r\n            term:term\r\n        })\r\n        this.fetchMoreData()\r\n    } \r\n\r\n    render(){\r\n        console.log(this.state);\r\n        return(\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment\">\r\n                    <SearchBar onSearchSubmit={this.onSearchSubmit} />\r\n                    <InfiniteScroll\r\n                        dataLength={this.state.gifs.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={this.state.more}\r\n                        loader={<h4>loading...</h4>}\r\n                        endMessage={<h4>End of search result</h4>}\r\n\r\n                    >\r\n                        <ImageData gifs = {this.state.gifs } />\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}